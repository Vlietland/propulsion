/*=====================================================================*/
/*                                                                     */
/* PROGRAMMA NAAM:      Commando manager    (Commands.cpp)             */
/* AUTEUR:              Resourser                                      */
/* BESCHRIJVING:                                                       */
/*   In deze file staan diverse modules                                */
/* Dit programma leest direct het toetsenbord uit mbv een interrupt    */
/*                                                                     */
/* Werking:                                                            */
/* Interrupt 9 wordt geactiveerd als er een toets ingedrukt wordt.     */
/*                                                                     */
/* Het programma onderschept deze interrupt en leidt deze naar een     */
/* eigen routine. In deze routine wordt de scancode van de toets       */
/* uitgelezen en in een variabele geplaatst.                           */
/* Daarna wordt er naar de eigenlijke interrupt 9-routine gesprongen.  */
/*                                                                     */
/* Het uitlezen van het toetsenbord:                                   */
/* Voor het uitlezen van oa keyboard wordt in de pc de 8253 gebruikt.  */
/* port [60h] --> port A                                               */
/* bit 0-6 scancode toetsenbord                                        */
/* bit 7   0= make ; 1= release                                        */
/*                                                                     */
/* port [61h] --> port B                                               */
/* bit 7   0 = uitlezen toetsenbord                                    */
/*                                                                     */
/* port [62h] --> port C                                               */
/* wordt niet gebruikt                                                 */
/*                                                                     */
/* port [63h] --> mode-word                                            */
/* wordt niet gebruikt omdat de port niet opnieuw geinit hoeft         */
/* te worden.                                                          */
/*                                                                     */
/*   * updatejoystickshipcommands				       */
/*   * updatekeyboardshipcommands                                      */
/*                                                                     */
/* INPUT PAR:              geen                                        */
/* OUPUT PAR:              geen                                        */
/* DATUM:                  2 februari 1997                             */
/*=====================================================================*/

static commands  inter = {deactive,deactive,deactive,off};	// deze variabele wordt bewerkt door de interrupt
static void interrupt keyboardinterrupt(__CPPARGS);
static void interrupt (*oldhandler)(__CPPARGS);

// let op de interrupt kan geen deel zijn van een classe omdat
// het adres van de interrupt dan niet geaccepteerd wordt door de
// handler functies. (ik denk dat dat komt omdat deze functies
// van een andere classe zijn

static void interrupt keyboardinterrupt(__CPPARGS)
  {
   int bewaar;
   int scancode;
   int ingedrukt;

   bewaar = inportb(poortB);
   outportb(poortB,(inportb(poortB) & 0x7F));	// init poort B om keyboard te lezen

   scancode  = inportb(poortA);
   ingedrukt = scancode & 0x80;
   scancode  = scancode & 0x7F;

   if (ingedrukt != 0x80)
     {
      if      (scancode == rotateleftkey)
	{
	 if      (inter.rotate == right)
	   inter.rotate = off;
	 else if (inter.rotate == off)
	   inter.rotate = left;
	}
      else if (scancode == rotaterightkey)
	{
	 if      (inter.rotate == left)
	   inter.rotate = off;
	 else if (inter.rotate == off)
	   inter.rotate = right;
	}
      else if (scancode == thrustkey)
	inter.thrust = active;
      else if (scancode == firekey)
	inter.fire   = active;
      else if (scancode == shieldkey)
	inter.shield = active;
      else if (scancode == escapekey)
	inter.escape = active;
     }
   else
     {
      if      (scancode == rotateleftkey)
	{
	 if      (inter.rotate == left)
	   inter.rotate = off;
	 else if (inter.rotate == off)
	   inter.rotate = right;
	}
      else if (scancode == rotaterightkey)
	{
	 if      (inter.rotate == right)
	   inter.rotate = off;
	 else if (inter.rotate == off)
	   inter.rotate = left;
	}
      else if (scancode == thrustkey)
	inter.thrust = deactive;
      else if (scancode == firekey)
	inter.fire   = deactive;
      else if (scancode == shieldkey)
	inter.shield = deactive;
      else if (scancode == escapekey)
	inter.escape = deactive;
     }
   outportb(poortB,bewaar);	// init poort B op oude waarde

   oldhandler();
  }


